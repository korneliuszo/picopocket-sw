UID_TABLE()

UID_TABLE_ENTRY(ROOT_DIR)
UID_TABLE_ENTRY(USB_DIR)
UID_TABLE_ENTRY(USB_SERIAL_NO)
UID_TABLE_ENTRY(WIFI_DIR)
UID_TABLE_ENTRY(WIFI_SSID)
UID_TABLE_ENTRY(WIFI_PW)
UID_TABLE_ENTRY(WIFI_DHCP)
UID_TABLE_ENTRY(WIFI_IP)
UID_TABLE_ENTRY(WIFI_MASK)
UID_TABLE_ENTRY(WIFI_GW)
UID_TABLE_ENTRY(WIFI_DNS)
UID_TABLE_ENTRY(WIFI_HOSTNAME)
UID_TABLE_ENTRY(WIFI_CONNECTED)
UID_TABLE_ENTRY(BIOS_DIR)
UID_TABLE_ENTRY(BIOS_SEGMENT)
UID_TABLE_ENTRY(MONITOR_AUTOBOOT)
UID_TABLE_ENTRY(RAMDISK_INSTALL)
UID_TABLE_ENTRY(WIFI_AP_IP)
UID_TABLE_ENTRY(WIFI_AP_MASK)
UID_TABLE_ENTRY(WIFI_AP_SSID)
UID_TABLE_ENTRY(WIFI_AP_PW)
UID_TABLE_ENTRY(WIFI_AP_DIR)
UID_TABLE_ENTRY(WIFI_ENABLED)
UID_TABLE_ENTRY(WIFI_PORT)
UID_TABLE_ENTRY(WIFI_IRQ)
UID_TABLE_ENTRY(WIFI_AP_ENABLED)
UID_TABLE_ENTRY(WIFI_AP_PORT)
UID_TABLE_ENTRY(WIFI_AP_IRQ)

UID_TABLE_END()

STR_FIELD(USB_SERIAL_NO,31, "NONAME")
FIELD_NAME("Device name")
FIELD_C_VALIDATE(const char *)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Presented name as:\r\n"
"	usb serial number\r\n"
"	device in TUI editor\r\n"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
STR_FIELD_END()

DIR_FIELD(USB_DIR)
FIELD_ENTRY(USB_SERIAL_NO)
DIR_FIELD_END_ENTRIES()
FIELD_NAME("Picopocket")
FIELD_HELP()
"Picopocket config variables"
FIELD_HELP_END()
DIR_FIELD_END()

STR_FIELD(WIFI_SSID,65, "Picopocket")
FIELD_NAME("STA_SSID")
FIELD_C_VALIDATE(const char *)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"SSID of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
STR_FIELD_END()

STR_FIELD(WIFI_PW,65, "")
FIELD_NAME("STA_PW")
FIELD_C_VALIDATE(const char *)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Password of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
STR_FIELD_END()

HEX_FIELD(WIFI_CONNECTED,uint8_t, 0x00)
FIELD_NAME("STA_CONN")
FIELD_C_VALIDATE(uint8_t)
		return newval==0;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"STA WiFi connection status"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
STR_FIELD_END()

HEX_FIELD(WIFI_DHCP,uint8_t, 0x00)
FIELD_NAME("STA_DHCP")
FIELD_C_VALIDATE(uint8_t)
		return newval==0 || newval == 1;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"STA WiFi use DHCP"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

IP_FIELD(WIFI_IP, 0xfe02a8c0)
FIELD_NAME("STA_IP")
FIELD_C_VALIDATE(uint32_t)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"IP of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
IP_FIELD_END()

IP_FIELD(WIFI_MASK, 0x00ffFFff)
FIELD_NAME("STA_MASK")
FIELD_C_VALIDATE(uint32_t)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Netmask of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
IP_FIELD_END()

IP_FIELD(WIFI_GW, 0x0102a8c0)
FIELD_NAME("STA_GW")
FIELD_C_VALIDATE(uint32_t)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Gateway of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
IP_FIELD_END()

IP_FIELD(WIFI_DNS, 0x0102a8c0)
FIELD_NAME("STA_DNS")
FIELD_C_VALIDATE(uint32_t)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"DNS of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
IP_FIELD_END()

STR_FIELD(WIFI_HOSTNAME,33, "Picopocket")
FIELD_NAME("STA_HOSTNAME")
FIELD_C_VALIDATE(const char *)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Hostname presented via DHCP of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(false)
STR_FIELD_END()

IP_FIELD(WIFI_AP_IP, 0x0101a8c0)
FIELD_NAME("AP_IP")
FIELD_C_VALIDATE(uint32_t)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"IP of AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

IP_FIELD(WIFI_AP_MASK, 0x00ffFFff)
FIELD_NAME("AP_MASK")
FIELD_C_VALIDATE(uint32_t)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Netmask of AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

STR_FIELD(WIFI_AP_SSID, 65, "Picopocket-AP")
FIELD_NAME("AP_SSID")
FIELD_C_VALIDATE(const char *)
		return true;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"SSID of AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

STR_FIELD(WIFI_AP_PW, 65, "")
FIELD_NAME("AP_PW")
FIELD_C_VALIDATE(const char *)
		size_t len = strlen(newval);
		return len == 0 || len >=8;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Password of AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

BOOL_FIELD(WIFI_ENABLED, true)
FIELD_NAME("STA_ENABLED")
FIELD_HELP()
"Enable STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

HEX_FIELD(WIFI_PORT, uint16_t, 0x300)
FIELD_NAME("STA_PORT")
FIELD_C_VALIDATE(uint16_t)
		if (newval%(8)==0)
			return true;
		return false;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"NE2000 port of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

HEX_FIELD(WIFI_IRQ, uint8_t, 5)
FIELD_NAME("STA_IRQ")
FIELD_C_VALIDATE(uint8_t)
		if (newval<=15)
			return true;
		return false;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"NE2000 irq of STA WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

DIR_FIELD(WIFI_DIR)
FIELD_ENTRY(WIFI_ENABLED)
FIELD_ENTRY(WIFI_PORT)
FIELD_ENTRY(WIFI_IRQ)
FIELD_ENTRY(WIFI_SSID)
FIELD_ENTRY(WIFI_PW)
FIELD_ENTRY(WIFI_CONNECTED)
FIELD_ENTRY(WIFI_DHCP)
FIELD_ENTRY(WIFI_IP)
FIELD_ENTRY(WIFI_MASK)
FIELD_ENTRY(WIFI_GW)
FIELD_ENTRY(WIFI_DNS)
FIELD_ENTRY(WIFI_HOSTNAME)
DIR_FIELD_END_ENTRIES()
FIELD_NAME("WiFi_STA")
FIELD_HELP()
"WiFi STA interface"
FIELD_HELP_END()
DIR_FIELD_END()

BOOL_FIELD(WIFI_AP_ENABLED, true)
FIELD_NAME("AP_ENABLED")
FIELD_HELP()
"Enable AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

HEX_FIELD(WIFI_AP_PORT, uint16_t, 0x200)
FIELD_NAME("AP_PORT")
FIELD_C_VALIDATE(uint16_t)
		if (newval%(8)==0)
			return true;
		return false;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"NE2000 port of AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

HEX_FIELD(WIFI_AP_IRQ, uint8_t, 3)
FIELD_NAME("AP_IRQ")
FIELD_C_VALIDATE(uint8_t)
		if (newval<=15)
			return true;
		return false;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"NE2000 irq of AP WiFi"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

DIR_FIELD(WIFI_AP_DIR)
FIELD_ENTRY(WIFI_AP_ENABLED)
FIELD_ENTRY(WIFI_AP_PORT)
FIELD_ENTRY(WIFI_AP_IRQ)
FIELD_ENTRY(WIFI_AP_SSID)
FIELD_ENTRY(WIFI_AP_PW)
FIELD_ENTRY(WIFI_AP_IP)
FIELD_ENTRY(WIFI_AP_MASK)
DIR_FIELD_END_ENTRIES()
FIELD_NAME("WiFi_AP")
FIELD_HELP()
"WiFi AP interface"
FIELD_HELP_END()
DIR_FIELD_END()

HEX_FIELD(BIOS_SEGMENT, uint16_t, 0xe800)
FIELD_NAME("BIOS_SEGMENT")
FIELD_C_VALIDATE(uint16_t)
		if(newval == 0x0000)
			return true;
		if((newval > 0xe800) && (newval < 0xff80))
			if (newval%(2*1024/16)==0)
				return true;
		return false;
FIELD_C_VALIDATE_END()
FIELD_HELP()
"Bios location, 0x0000 for disable"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
IP_FIELD_END()

BOOL_FIELD(MONITOR_AUTOBOOT, false)
FIELD_NAME("MONITOR_AUTOBOOT")
FIELD_HELP()
"Autoexec to monitor mode"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

BOOL_FIELD(RAMDISK_INSTALL, true)
FIELD_NAME("RAMDISK_INSTALL")
FIELD_HELP()
"Install ramdisk by default"
FIELD_HELP_END()
FIELD_COLDBOOT(true)
STR_FIELD_END()

DIR_FIELD(BIOS_DIR)
FIELD_ENTRY(BIOS_SEGMENT)
FIELD_ENTRY(MONITOR_AUTOBOOT)
FIELD_ENTRY(RAMDISK_INSTALL)
DIR_FIELD_END_ENTRIES()
FIELD_NAME("option ROM")
FIELD_HELP()
"Option rom boot addons"
FIELD_HELP_END()
DIR_FIELD_END()

DIR_FIELD(ROOT_DIR)
FIELD_ENTRY(USB_DIR)
FIELD_ENTRY(WIFI_DIR)
FIELD_ENTRY(WIFI_AP_DIR)
FIELD_ENTRY(BIOS_DIR)
DIR_FIELD_END_ENTRIES()
FIELD_NAME("Configuration")
FIELD_HELP()
"/"
FIELD_HELP_END()
DIR_FIELD_END()

FIELD_STORED_TABLE()
STORE_FIELD_FIRST(USB_SERIAL_NO)
STORE_FIELD(WIFI_ENABLED)
STORE_FIELD(WIFI_PORT)
STORE_FIELD(WIFI_IRQ)
STORE_FIELD(WIFI_SSID)
STORE_FIELD(WIFI_PW)
STORE_FIELD(WIFI_DHCP)
STORE_FIELD(WIFI_IP)
STORE_FIELD(WIFI_MASK)
STORE_FIELD(WIFI_GW)
STORE_FIELD(WIFI_DNS)
STORE_FIELD(WIFI_HOSTNAME)
STORE_FIELD(WIFI_AP_ENABLED)
STORE_FIELD(WIFI_AP_PORT)
STORE_FIELD(WIFI_AP_IRQ)
STORE_FIELD(WIFI_AP_IP)
STORE_FIELD(WIFI_AP_MASK)
STORE_FIELD(WIFI_AP_SSID)
STORE_FIELD(WIFI_AP_PW)
STORE_FIELD(BIOS_SEGMENT)
STORE_FIELD(MONITOR_AUTOBOOT)
STORE_FIELD(RAMDISK_INSTALL)
FIELD_STORED_TABLE_END()

