name: Build
on: [push, pull_request]
jobs:
    build-firmware:
      runs-on: ubuntu-22.04
      env: 
        OUTPUT_DIR: ${{github.workspace}}/binaries
      steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Cache Submodules
        id: cache-submodule
        uses: actions/cache@v3
        with:
          path: |
            .git/modules
          key: ${{ runner.os }}-submodules
      - name: Checkout repo with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt update --assume-yes
          sudo apt install gperf mtools

      - name: Install python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip' # caching pip dependencies

      - name: Install python3-packages
        run: pip install numpy sympy more-itertools brotli PyYAML

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.31.x'

      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '14.2.Rel1'     

      - name: Install OpenWatcom 2.0
        uses: open-watcom/setup-watcom@v0
        with:
          version: "2.0-64"
          tag: "2024-03-01-Build"

      - name: Create output dir
        shell: bash
        working-directory: ${{github.workspace}}
        run: |
          mkdir -p $OUTPUT_DIR
        
      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Build Firmware
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          cmake $GITHUB_WORKSPACE/ -DWATCOM_PATH="$WATCOM"
          cmake --build . --parallel $(nproc)
          cp picopocket-sw.uf2 $OUTPUT_DIR/picopocket-sw.uf2
          cp or/8088/optionrom.bin $OUTPUT_DIR/optionrom.bin
          cp ../or/config/tui/pocket.exe $OUTPUT_DIR/pocket.exe

      - name: Create GUS Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build_gus

      - name: Build GUS Firmware
        shell: bash
        working-directory: ${{github.workspace}}/build_gus
        run: |
          cmake $GITHUB_WORKSPACE/ -DWATCOM_PATH="$WATCOM" -DTARGET_GUS=ON
          cmake --build . --parallel $(nproc)
          cp picopocket-sw.uf2 $OUTPUT_DIR/picopocket-gus-sw.uf2

      - name: Upload Firmware
        uses: actions/upload-artifact@v4
        with:
          name: picopocket-firmware
          path: |
            ${{env.OUTPUT_DIR}}/*.uf2
            ${{env.OUTPUT_DIR}}/pocket.exe
            ${{env.OUTPUT_DIR}}/optionrom.bin
    create-release:
      if: github.ref_type == 'tag' && startsWith(github.ref_name, 'v')
      runs-on: ubuntu-22.04
      needs: [build-firmware]
      env: 
        STAGING_DIR: ${{github.workspace}}/release-staging-dir
      steps:
        - name: Checkout repo
          uses: actions/checkout@v4
        - name: Get Tags
          id: tag
          uses: ildug/get-tag-action@v1
        - name: Download firmware artifact
          uses: actions/download-artifact@v4
          with:
            name: picopocket-firmware
            path: ${{env.STAGING_DIR}}
        - name: Zip release
          run: |
            cp picopocket-sw.uf2 ../picopocket-sw-v${{ steps.tag.outputs.version }}.uf2
            cp picopocket-gus-sw.uf2 ../picopocket-gus-sw-v${{ steps.tag.outputs.version }}.uf2
            cp pocket.exe ../pocket-v${{ steps.tag.outputs.version }}.exe
            cp optionrom.bin ../optionrom-v${{ steps.tag.outputs.version }}.bin
            zip -9 -r ../picopocket-v${{ steps.tag.outputs.version }}.zip .

          working-directory: ${{env.STAGING_DIR}}
        - name: Release
          uses: softprops/action-gh-release@v1
          with:
            files: |
              picopocket-v${{ steps.tag.outputs.version }}.zip
              pocket-v${{ steps.tag.outputs.version }}.exe
              optionrom-v${{ steps.tag.outputs.version }}.bin
              picopocket-sw-v${{ steps.tag.outputs.version }}.uf2
              picopocket-gus-sw-v${{ steps.tag.outputs.version }}.uf2
            draft: true
